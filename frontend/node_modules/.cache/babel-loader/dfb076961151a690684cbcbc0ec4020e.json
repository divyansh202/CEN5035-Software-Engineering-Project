{"ast":null,"code":"var _jsxFileName = \"/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/src/components/PrivateRoute.js\",\n    _s = $RefreshSig$();\n\nimport { connect } from 'react-redux';\nimport { Route, Redirect, useLocation } from 'react-router-dom';\nimport { tokenSelector } from '../selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PrivateRoute = _ref => {\n  _s();\n\n  let {\n    token,\n    children,\n    ...rest\n  } = _ref;\n  const location = useLocation();\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    children: token ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: {\n        pathname: '/login',\n        state: {\n          requireAuth: 'You must be logged in to do that',\n          prevPathname: location.pathname\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PrivateRoute, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\n_c = PrivateRoute;\n\nconst mapStateToProps = state => ({\n  token: tokenSelector(state)\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n\nvar _c;\n\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"sources":["/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/src/components/PrivateRoute.js"],"names":["connect","Route","Redirect","useLocation","tokenSelector","PrivateRoute","token","children","rest","location","pathname","state","requireAuth","prevPathname","mapStateToProps"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,kBAA7C;AACA,SAASC,aAAT,QAA8B,cAA9B;;;AAEA,MAAMC,YAAY,GAAG,QAAkC;AAAA;;AAAA,MAAjC;AAAEC,IAAAA,KAAF;AAASC,IAAAA,QAAT;AAAmB,OAAGC;AAAtB,GAAiC;AACrD,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,sBACE,QAAC,KAAD,OAAWK,IAAX;AAAA,cACGF,KAAK,GACJC,QADI,gBAGJ,QAAC,QAAD;AACE,MAAA,EAAE,EAAE;AACFG,QAAAA,QAAQ,EAAE,QADR;AAEFC,QAAAA,KAAK,EAAE;AACLC,UAAAA,WAAW,EAAE,kCADR;AAELC,UAAAA,YAAY,EAAEJ,QAAQ,CAACC;AAFlB;AAFL;AADN;AAAA;AAAA;AAAA;AAAA;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CAnBD;;GAAML,Y;UACaF,W;;;KADbE,Y;;AAqBN,MAAMS,eAAe,GAAIH,KAAD,KAAY;AAClCL,EAAAA,KAAK,EAAEF,aAAa,CAACO,KAAD;AADc,CAAZ,CAAxB;;AAIA,eAAeX,OAAO,CAACc,eAAD,CAAP,CAAyBT,YAAzB,CAAf","sourcesContent":["import { connect } from 'react-redux';\r\nimport { Route, Redirect, useLocation } from 'react-router-dom';\r\nimport { tokenSelector } from '../selectors';\r\n\r\nconst PrivateRoute = ({ token, children, ...rest }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <Route {...rest}>\r\n      {token ? (\r\n        children\r\n      ) : (\r\n        <Redirect\r\n          to={{\r\n            pathname: '/login',\r\n            state: {\r\n              requireAuth: 'You must be logged in to do that',\r\n              prevPathname: location.pathname,\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Route>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  token: tokenSelector(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n"]},"metadata":{},"sourceType":"module"}