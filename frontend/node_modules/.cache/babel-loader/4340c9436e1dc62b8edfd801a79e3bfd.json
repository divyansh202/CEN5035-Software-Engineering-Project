{"ast":null,"code":"var _jsxFileName = \"/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/src/components/Post.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport moment from 'moment';\nimport { Text, Heading, Box, Flex, HStack, Tooltip, IconButton, useColorMode } from '@chakra-ui/react';\nimport { ChatIcon, EditIcon } from '@chakra-ui/icons';\nimport ThemedBox from './ThemedBox';\nimport UpvoteBar from './UpvoteBar';\nimport EditBox from './EditBox';\nimport DeleteButton from './DeleteButton';\nimport ChakraMarkdown from './ChakraMarkdown';\nimport { userSelector } from '../selectors';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = _ref => {\n  _s();\n\n  let {\n    id,\n    type,\n    subreddit,\n    author,\n    createdAt,\n    title,\n    body,\n    numVotes,\n    hasVoted,\n    numComments,\n    user\n  } = _ref;\n  const {\n    colorMode\n  } = useColorMode();\n  const postDetailColor = 'gray.500';\n  const postDetailBgColor = colorMode === 'light' ? 'gray.100' : 'gray.600';\n  const isTextPost = type === 'text';\n  const [isEditing, setIsEditing] = useState(false);\n  const deletedText = '[deleted]';\n  return /*#__PURE__*/_jsxDEV(ThemedBox, {\n    p: 4,\n    borderRadius: \"md\",\n    width: \"100%\",\n    light: \"gray.50\",\n    dark: \"gray.700\",\n    children: /*#__PURE__*/_jsxDEV(Flex, {\n      children: [/*#__PURE__*/_jsxDEV(UpvoteBar, {\n        type: \"post\",\n        numVotes: numVotes,\n        id: id,\n        voteValue: hasVoted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexGrow: 1,\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: Link,\n          to: `/r/${subreddit}`,\n          color: postDetailColor,\n          fontWeight: \"bold\",\n          children: `r/${subreddit}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), ' ', /*#__PURE__*/_jsxDEV(Text, {\n          as: \"span\",\n          color: postDetailColor,\n          children: `Posted by `\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"span\",\n          children: author ? `u/${author}` : deletedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          as: \"span\",\n          color: postDetailColor,\n          children: [' ', /*#__PURE__*/_jsxDEV(Tooltip, {\n            label: moment(createdAt).format('LLLL'),\n            children: moment(createdAt).fromNow()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Heading, {\n          as: isTextPost ? Link : 'a',\n          display: \"block\",\n          to: isTextPost ? `/r/${subreddit}/comments/${id}` : null,\n          href: isTextPost ? null : body,\n          target: isTextPost ? null : '_blank',\n          mt: 2,\n          mb: 4,\n          fontSize: \"1.5em\",\n          fontWeight: \"500\",\n          children: title || deletedText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), isTextPost ? isEditing ? /*#__PURE__*/_jsxDEV(EditBox, {\n          type: \"post\",\n          id: id,\n          initialText: body,\n          onClose: () => setIsEditing(false)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 15\n        }, this) : /*#__PURE__*/_jsxDEV(Box, {\n          listStylePosition: \"inside\",\n          children: /*#__PURE__*/_jsxDEV(ChakraMarkdown, {\n            children: body\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this) : null, /*#__PURE__*/_jsxDEV(Flex, {\n          mt: 3,\n          alignItems: \"center\",\n          color: postDetailColor,\n          fontWeight: \"bold\",\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            as: Link,\n            to: `/r/${subreddit}/comments/${id}`,\n            p: 2,\n            borderRadius: \"sm\",\n            _hover: {\n              backgroundColor: postDetailBgColor\n            },\n            children: [/*#__PURE__*/_jsxDEV(ChatIcon, {\n              mr: 2\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), numComments, \" \", numComments === 1 ? 'comment' : 'comments']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), user && user.username === author && /*#__PURE__*/_jsxDEV(HStack, {\n        alignItems: \"flex-start\",\n        children: [isTextPost && !isEditing && /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setIsEditing(true),\n          backgroundColor: \"inherit\",\n          icon: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n          type: \"post\",\n          id: id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"Y28qBdmBaNXnCZg6E/a8mqs+e7I=\", false, function () {\n  return [useColorMode];\n});\n\n_c = Post;\n\nconst mapStateToProps = state => ({\n  user: userSelector(state)\n});\n\nexport default connect(mapStateToProps)(Post);\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/src/components/Post.js"],"names":["useState","connect","Link","moment","Text","Heading","Box","Flex","HStack","Tooltip","IconButton","useColorMode","ChatIcon","EditIcon","ThemedBox","UpvoteBar","EditBox","DeleteButton","ChakraMarkdown","userSelector","Post","id","type","subreddit","author","createdAt","title","body","numVotes","hasVoted","numComments","user","colorMode","postDetailColor","postDetailBgColor","isTextPost","isEditing","setIsEditing","deletedText","format","fromNow","backgroundColor","username","mapStateToProps","state"],"mappings":"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","sourcesContent":["import { useState } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport {\r\n  Text,\r\n  Heading,\r\n  Box,\r\n  Flex,\r\n  HStack,\r\n  Tooltip,\r\n  IconButton,\r\n  useColorMode,\r\n} from '@chakra-ui/react';\r\nimport { ChatIcon, EditIcon } from '@chakra-ui/icons';\r\nimport ThemedBox from './ThemedBox';\r\nimport UpvoteBar from './UpvoteBar';\r\nimport EditBox from './EditBox';\r\nimport DeleteButton from './DeleteButton';\r\nimport ChakraMarkdown from './ChakraMarkdown';\r\nimport { userSelector } from '../selectors';\r\n\r\nconst Post = ({\r\n  id,\r\n  type,\r\n  subreddit,\r\n  author,\r\n  createdAt,\r\n  title,\r\n  body,\r\n  numVotes,\r\n  hasVoted,\r\n  numComments,\r\n  user,\r\n}) => {\r\n  const { colorMode } = useColorMode();\r\n  const postDetailColor = 'gray.500';\r\n  const postDetailBgColor = colorMode === 'light' ? 'gray.100' : 'gray.600';\r\n  const isTextPost = type === 'text';\r\n\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const deletedText = '[deleted]';\r\n  return (\r\n    <ThemedBox\r\n      p={4}\r\n      borderRadius=\"md\"\r\n      width=\"100%\"\r\n      light=\"gray.50\"\r\n      dark=\"gray.700\"\r\n    >\r\n      <Flex>\r\n        <UpvoteBar\r\n          type=\"post\"\r\n          numVotes={numVotes}\r\n          id={id}\r\n          voteValue={hasVoted}\r\n        />\r\n        <Box flexGrow={1}>\r\n          <Text\r\n            as={Link}\r\n            to={`/r/${subreddit}`}\r\n            color={postDetailColor}\r\n            fontWeight=\"bold\"\r\n          >\r\n            {`r/${subreddit}`}\r\n          </Text>{' '}\r\n          <Text as=\"span\" color={postDetailColor}>\r\n            {`Posted by `}\r\n          </Text>\r\n          <Text as=\"span\">{author ? `u/${author}` : deletedText}</Text>\r\n          <Text as=\"span\" color={postDetailColor}>\r\n            {' '}\r\n            <Tooltip label={moment(createdAt).format('LLLL')}>\r\n              {moment(createdAt).fromNow()}\r\n            </Tooltip>\r\n          </Text>\r\n          <Heading\r\n            as={isTextPost ? Link : 'a'}\r\n            display=\"block\"\r\n            to={isTextPost ? `/r/${subreddit}/comments/${id}` : null}\r\n            href={isTextPost ? null : body}\r\n            target={isTextPost ? null : '_blank'}\r\n            mt={2}\r\n            mb={4}\r\n            fontSize=\"1.5em\"\r\n            fontWeight=\"500\"\r\n          >\r\n            {title || deletedText}\r\n          </Heading>\r\n          {isTextPost ? (\r\n            isEditing ? (\r\n              <EditBox\r\n                type=\"post\"\r\n                id={id}\r\n                initialText={body}\r\n                onClose={() => setIsEditing(false)}\r\n              />\r\n            ) : (\r\n              <Box listStylePosition=\"inside\">\r\n                <ChakraMarkdown>{body}</ChakraMarkdown>\r\n              </Box>\r\n            )\r\n          ) : null}\r\n          <Flex\r\n            mt={3}\r\n            alignItems=\"center\"\r\n            color={postDetailColor}\r\n            fontWeight=\"bold\"\r\n          >\r\n            <Box\r\n              as={Link}\r\n              to={`/r/${subreddit}/comments/${id}`}\r\n              p={2}\r\n              borderRadius=\"sm\"\r\n              _hover={{ backgroundColor: postDetailBgColor }}\r\n            >\r\n              <ChatIcon mr={2} />\r\n              {numComments} {numComments === 1 ? 'comment' : 'comments'}\r\n            </Box>\r\n          </Flex>\r\n        </Box>\r\n        {user && user.username === author && (\r\n          <HStack alignItems=\"flex-start\">\r\n            {isTextPost && !isEditing && (\r\n              <IconButton\r\n                onClick={() => setIsEditing(true)}\r\n                backgroundColor=\"inherit\"\r\n                icon={<EditIcon />}\r\n              />\r\n            )}\r\n            <DeleteButton type=\"post\" id={id} />\r\n          </HStack>\r\n        )}\r\n      </Flex>\r\n    </ThemedBox>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user: userSelector(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(Post);\r\n"]},"metadata":{},"sourceType":"module"}