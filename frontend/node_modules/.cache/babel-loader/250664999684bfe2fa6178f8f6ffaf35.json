{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport authReducer from '../reducers/auth';\nimport loadingReducer from '../reducers/loading';\nimport errorReducer from '../reducers/error';\nimport postReducer from '../reducers/post';\nimport postListReducer from '../reducers/postList';\nimport commentsReducer from '../reducers/comments';\nimport { saveState } from '../localStorage';\nimport subredditsReducer from '../reducers/subreddits';\nconst composeEnhancers = typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst configureStore = () => {\n  const rootReducer = combineReducers({\n    auth: authReducer,\n    loading: loadingReducer,\n    error: errorReducer,\n    post: postReducer,\n    postList: postListReducer,\n    comments: commentsReducer,\n    subreddits: subredditsReducer\n  });\n  const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)));\n  store.subscribe(() => {\n    saveState(store.getState().auth, 'authState');\n  });\n  return store;\n};\n\nconst store = configureStore();\nexport default store;","map":{"version":3,"sources":["/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/src/store/configureStore.js"],"names":["createStore","combineReducers","applyMiddleware","compose","thunk","authReducer","loadingReducer","errorReducer","postReducer","postListReducer","commentsReducer","saveState","subredditsReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","configureStore","rootReducer","auth","loading","error","post","postList","comments","subreddits","store","subscribe","getState"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,EAAwDC,OAAxD,QAAuE,OAAvE;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,YAAP,MAAyB,mBAAzB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,OAAOC,eAAP,MAA4B,sBAA5B;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AAEA,MAAMC,gBAAgB,GACnB,OAAOC,MAAP,KAAkB,WAAlB,IACCA,MAAM,CAACC,oCADT,IAEAZ,OAHF;;AAKA,MAAMa,cAAc,GAAG,MAAM;AAC3B,QAAMC,WAAW,GAAGhB,eAAe,CAAC;AAClCiB,IAAAA,IAAI,EAAEb,WAD4B;AAElCc,IAAAA,OAAO,EAAEb,cAFyB;AAGlCc,IAAAA,KAAK,EAAEb,YAH2B;AAIlCc,IAAAA,IAAI,EAAEb,WAJ4B;AAKlCc,IAAAA,QAAQ,EAAEb,eALwB;AAMlCc,IAAAA,QAAQ,EAAEb,eANwB;AAOlCc,IAAAA,UAAU,EAAEZ;AAPsB,GAAD,CAAnC;AAUA,QAAMa,KAAK,GAAGzB,WAAW,CACvBiB,WADuB,EAEvBJ,gBAAgB,CAACX,eAAe,CAACE,KAAD,CAAhB,CAFO,CAAzB;AAKAqB,EAAAA,KAAK,CAACC,SAAN,CAAgB,MAAM;AACpBf,IAAAA,SAAS,CAACc,KAAK,CAACE,QAAN,GAAiBT,IAAlB,EAAwB,WAAxB,CAAT;AACD,GAFD;AAIA,SAAOO,KAAP;AACD,CArBD;;AAuBA,MAAMA,KAAK,GAAGT,cAAc,EAA5B;AAEA,eAAeS,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport authReducer from '../reducers/auth';\r\nimport loadingReducer from '../reducers/loading';\r\nimport errorReducer from '../reducers/error';\r\nimport postReducer from '../reducers/post';\r\nimport postListReducer from '../reducers/postList';\r\nimport commentsReducer from '../reducers/comments';\r\nimport { saveState } from '../localStorage';\r\nimport subredditsReducer from '../reducers/subreddits';\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== 'undefined' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst configureStore = () => {\r\n  const rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    loading: loadingReducer,\r\n    error: errorReducer,\r\n    post: postReducer,\r\n    postList: postListReducer,\r\n    comments: commentsReducer,\r\n    subreddits: subredditsReducer,\r\n  });\r\n\r\n  const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(applyMiddleware(thunk))\r\n  );\r\n\r\n  store.subscribe(() => {\r\n    saveState(store.getState().auth, 'authState');\r\n  });\r\n\r\n  return store;\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n"]},"metadata":{},"sourceType":"module"}