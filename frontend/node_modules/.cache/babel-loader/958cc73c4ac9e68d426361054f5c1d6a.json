{"ast":null,"code":"import axios from '../axios-config';\nexport const setPostList = postList => ({\n  type: 'SET_POST_LIST',\n  postList\n});\nexport const getPostList = filters => async dispatch => {\n  try {\n    dispatch({\n      type: 'GET_POST_LIST_REQUEST'\n    });\n    const response = await axios.get('/posts', {\n      params: filters\n    });\n    dispatch(setPostList(response.data.map(post => ({ ...post,\n      votes: post.votes\n    }))));\n    dispatch({\n      type: 'GET_POST_LIST_SUCCESS'\n    });\n  } catch (e) {\n    dispatch({\n      type: 'GET_POST_LIST_FAILURE',\n      message: e.message,\n      response: e.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/src/actions/postList.js"],"names":["axios","setPostList","postList","type","getPostList","filters","dispatch","response","get","params","data","map","post","votes","e","message"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AAEA,OAAO,MAAMC,WAAW,GAAIC,QAAD,KAAe;AACxCC,EAAAA,IAAI,EAAE,eADkC;AAExCD,EAAAA;AAFwC,CAAf,CAApB;AAKP,OAAO,MAAME,WAAW,GAAIC,OAAD,IAAa,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMI,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,QAAV,EAAoB;AAAEC,MAAAA,MAAM,EAAEJ;AAAV,KAApB,CAAvB;AACAC,IAAAA,QAAQ,CACNL,WAAW,CACTM,QAAQ,CAACG,IAAT,CAAcC,GAAd,CAAmBC,IAAD,KAAW,EAC3B,GAAGA,IADwB;AAE3BC,MAAAA,KAAK,EAAED,IAAI,CAACC;AAFe,KAAX,CAAlB,CADS,CADL,CAAR;AAQAP,IAAAA,QAAQ,CAAC;AAAEH,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAZD,CAYE,OAAOW,CAAP,EAAU;AACVR,IAAAA,QAAQ,CAAC;AACPH,MAAAA,IAAI,EAAE,uBADC;AAEPY,MAAAA,OAAO,EAAED,CAAC,CAACC,OAFJ;AAGPR,MAAAA,QAAQ,EAAEO,CAAC,CAACP;AAHL,KAAD,CAAR;AAKD;AACF,CApBM","sourcesContent":["import axios from '../axios-config';\r\n\r\nexport const setPostList = (postList) => ({\r\n  type: 'SET_POST_LIST',\r\n  postList,\r\n});\r\n\r\nexport const getPostList = (filters) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'GET_POST_LIST_REQUEST' });\r\n    const response = await axios.get('/posts', { params: filters });\r\n    dispatch(\r\n      setPostList(\r\n        response.data.map((post) => ({\r\n          ...post,\r\n          votes: post.votes,\r\n        }))\r\n      )\r\n    );\r\n    dispatch({ type: 'GET_POST_LIST_SUCCESS' });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: 'GET_POST_LIST_FAILURE',\r\n      message: e.message,\r\n      response: e.response,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}