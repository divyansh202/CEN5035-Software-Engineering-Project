{"ast":null,"code":"export class CurlHelper {\n  constructor(config) {\n    this.request = config;\n  }\n\n  getHeaders() {\n    let headers = this.request.headers,\n        curlHeaders = \"\"; // get the headers concerning the appropriate method (defined in the global axios instance)\n\n    if (headers.hasOwnProperty(\"common\")) {\n      headers = this.request.headers[this.request.method];\n    } // add any custom headers (defined upon calling methods like .get(), .post(), etc.)\n\n\n    for (let property in this.request.headers) {\n      if (![\"common\", \"delete\", \"get\", \"head\", \"patch\", \"post\", \"put\"].includes(property)) {\n        headers[property] = this.request.headers[property];\n      }\n    }\n\n    for (let property in headers) {\n      if ({}.hasOwnProperty.call(headers, property)) {\n        let header = `${property}:${headers[property]}`;\n        curlHeaders = `${curlHeaders} -H \"${header}\"`;\n      }\n    }\n\n    return curlHeaders.trim();\n  }\n\n  getMethod() {\n    return `-X ${this.request.method.toUpperCase()}`;\n  }\n\n  getBody() {\n    if (typeof this.request.data !== \"undefined\" && this.request.data !== \"\" && this.request.data !== null && this.request.method.toUpperCase() !== \"GET\") {\n      let data = typeof this.request.data === \"object\" || Object.prototype.toString.call(this.request.data) === \"[object Array]\" ? JSON.stringify(this.request.data) : this.request.data;\n      return `--data '${data}'`.trim();\n    } else {\n      return \"\";\n    }\n  }\n\n  getUrl() {\n    if (this.request.baseURL) {\n      let baseUrl = this.request.baseURL;\n      let url = this.request.url;\n      let finalUrl = baseUrl + \"/\" + url;\n      return finalUrl.replace(/\\/{2,}/g, '/').replace(\"http:/\", \"http://\").replace(\"https:/\", \"https://\");\n    }\n\n    return this.request.url;\n  }\n\n  getQueryString() {\n    if (this.request.paramsSerializer) {\n      const params = this.request.paramsSerializer(this.request.params);\n      if (!params || params.length === 0) return '';\n      if (params.startsWith('?')) return params;\n      return `?${params}`;\n    }\n\n    let params = \"\";\n    let i = 0;\n\n    for (let param in this.request.params) {\n      if ({}.hasOwnProperty.call(this.request.params, param)) {\n        params += i !== 0 ? `&${param}=${this.request.params[param]}` : `?${param}=${this.request.params[param]}`;\n        i++;\n      }\n    }\n\n    return params;\n  }\n\n  getBuiltURL() {\n    let url = this.getUrl();\n\n    if (this.getQueryString() !== \"\") {\n      url += this.getQueryString();\n    }\n\n    return url.trim();\n  }\n\n  generateCommand() {\n    return `curl ${this.getMethod()} \"${this.getBuiltURL()}\" ${this.getHeaders()} ${this.getBody()}`.trim().replace(/\\s{2,}/g, \" \");\n  }\n\n}","map":{"version":3,"sources":["/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/node_modules/axios-curlirize/src/lib/CurlHelper.js"],"names":["CurlHelper","constructor","config","request","getHeaders","headers","curlHeaders","hasOwnProperty","method","property","includes","call","header","trim","getMethod","toUpperCase","getBody","data","Object","prototype","toString","JSON","stringify","getUrl","baseURL","baseUrl","url","finalUrl","replace","getQueryString","paramsSerializer","params","length","startsWith","i","param","getBuiltURL","generateCommand"],"mappings":"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","sourcesContent":["export class CurlHelper {\n  constructor(config) {\n    this.request = config;\n  }\n\n  getHeaders() {\n    let headers = this.request.headers,\n      curlHeaders = \"\";\n\n    // get the headers concerning the appropriate method (defined in the global axios instance)\n    if (headers.hasOwnProperty(\"common\")) {\n      headers = this.request.headers[this.request.method];\n    }\n\n    // add any custom headers (defined upon calling methods like .get(), .post(), etc.)\n    for(let property in this.request.headers) {\n      if (\n        ![\"common\", \"delete\", \"get\", \"head\", \"patch\", \"post\", \"put\"].includes(\n          property\n        )\n      ) {\n        headers[property] = this.request.headers[property];\n      }\n    }\n\n    for(let property in headers) {\n      if({}.hasOwnProperty.call(headers, property)) {\n        let header = `${property}:${headers[property]}`;\n        curlHeaders = `${curlHeaders} -H \"${header}\"`;\n      }\n    }\n\n    return curlHeaders.trim();\n  }\n\n  getMethod() {\n    return `-X ${this.request.method.toUpperCase()}`;\n  }\n\n  getBody() {\n    if (\n      typeof this.request.data !== \"undefined\" &&\n      this.request.data !== \"\" &&\n      this.request.data !== null &&\n      this.request.method.toUpperCase() !== \"GET\"\n    ) {\n      let data =\n        typeof this.request.data === \"object\" ||\n        Object.prototype.toString.call(this.request.data) === \"[object Array]\"\n          ? JSON.stringify(this.request.data)\n          : this.request.data;\n      return `--data '${data}'`.trim();\n    } else {\n      return \"\";\n    }\n  }\n\n  getUrl() {\n    if (this.request.baseURL) {\n      let baseUrl = this.request.baseURL\n      let url = this.request.url\n      let finalUrl = baseUrl + \"/\" + url\n      return finalUrl\n        .replace(/\\/{2,}/g, '/')\n        .replace(\"http:/\", \"http://\")\n        .replace(\"https:/\", \"https://\")\n    }\n    return this.request.url;\n  }\n\n  getQueryString() {\n    if (this.request.paramsSerializer) {\n      const params = this.request.paramsSerializer(this.request.params)\n      if (!params || params.length === 0) return ''\n      if (params.startsWith('?')) return params\n      return `?${params}`\n    }\n    let params = \"\"\n    let i = 0\n\n    for(let param in this.request.params) {\n      if({}.hasOwnProperty.call(this.request.params, param)) {\n        params +=\n        i !== 0\n          ? `&${param}=${this.request.params[param]}`\n          : `?${param}=${this.request.params[param]}`;\n        i++;\n      }\n    }\n\n    return params;\n  }\n\n  getBuiltURL() {\n    let url = this.getUrl();\n\n    if (this.getQueryString() !== \"\") {\n      url += this.getQueryString();\n    }\n\n    return url.trim();\n  }\n\n  generateCommand() {\n    return `curl ${this.getMethod()} \"${this.getBuiltURL()}\" ${this.getHeaders()} ${this.getBody()}`\n      .trim()\n      .replace(/\\s{2,}/g, \" \");\n  }\n}\n"]},"metadata":{},"sourceType":"module"}