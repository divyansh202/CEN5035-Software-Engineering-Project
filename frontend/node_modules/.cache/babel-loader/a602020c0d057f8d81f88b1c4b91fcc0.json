{"ast":null,"code":"import axios from '../axios-config';\nimport { subredditsSelector } from '../selectors';\nexport const setSubreddits = subreddits => ({\n  type: 'SET_SUBREDDITS',\n  subreddits\n});\nexport const getSubreddits = () => async dispatch => {\n  try {\n    dispatch({\n      type: 'GET_SUBREDDITS_REQUEST'\n    });\n    const response = await axios.get('/subreddits');\n    dispatch(setSubreddits(response.data));\n    dispatch({\n      type: 'GET_SUBREDDITS_SUCCESS'\n    });\n  } catch (e) {\n    dispatch({\n      type: 'GET_SUBREDDITS_FAILURE',\n      message: e.message,\n      response: e.response\n    });\n  }\n};\nexport const createSubreddit = (name, description) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: 'CREATE_SUBREDDIT_REQUEST'\n    });\n    const response = await axios.post('/subreddits', {\n      name,\n      description\n    });\n    dispatch(setSubreddits(subredditsSelector(getState()).concat(response.data)));\n    dispatch({\n      type: 'CREATE_SUBREDDIT_SUCCESS'\n    });\n    return response.data;\n  } catch (e) {\n    dispatch({\n      type: 'CREATE_SUBREDDIT_FAILURE',\n      message: e.message,\n      response: e.response\n    });\n  }\n};","map":{"version":3,"sources":["/Users/garvitgupta/Documents/Development/CEN5035-Software-Engineering-Project/frontend/src/actions/subreddits.js"],"names":["axios","subredditsSelector","setSubreddits","subreddits","type","getSubreddits","dispatch","response","get","data","e","message","createSubreddit","name","description","getState","post","concat"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,SAASC,kBAAT,QAAmC,cAAnC;AAEA,OAAO,MAAMC,aAAa,GAAIC,UAAD,KAAiB;AAC5CC,EAAAA,IAAI,EAAE,gBADsC;AAE5CD,EAAAA;AAF4C,CAAjB,CAAtB;AAKP,OAAO,MAAME,aAAa,GAAG,MAAM,MAAOC,QAAP,IAAoB;AACrD,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACQ,GAAN,CAAU,aAAV,CAAvB;AACAF,IAAAA,QAAQ,CAACJ,aAAa,CAACK,QAAQ,CAACE,IAAV,CAAd,CAAR;AACAH,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GALD,CAKE,OAAOM,CAAP,EAAU;AACVJ,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAE,wBADC;AAEPO,MAAAA,OAAO,EAAED,CAAC,CAACC,OAFJ;AAGPJ,MAAAA,QAAQ,EAAEG,CAAC,CAACH;AAHL,KAAD,CAAR;AAKD;AACF,CAbM;AAeP,OAAO,MAAMK,eAAe,GAAG,CAACC,IAAD,EAAOC,WAAP,KAAuB,OACpDR,QADoD,EAEpDS,QAFoD,KAGjD;AACH,MAAI;AACFT,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,UAAMG,QAAQ,GAAG,MAAMP,KAAK,CAACgB,IAAN,CAAW,aAAX,EAA0B;AAAEH,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAA1B,CAAvB;AACAR,IAAAA,QAAQ,CACNJ,aAAa,CAACD,kBAAkB,CAACc,QAAQ,EAAT,CAAlB,CAA+BE,MAA/B,CAAsCV,QAAQ,CAACE,IAA/C,CAAD,CADP,CAAR;AAGAH,IAAAA,QAAQ,CAAC;AAAEF,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACA,WAAOG,QAAQ,CAACE,IAAhB;AACD,GARD,CAQE,OAAOC,CAAP,EAAU;AACVJ,IAAAA,QAAQ,CAAC;AACPF,MAAAA,IAAI,EAAE,0BADC;AAEPO,MAAAA,OAAO,EAAED,CAAC,CAACC,OAFJ;AAGPJ,MAAAA,QAAQ,EAAEG,CAAC,CAACH;AAHL,KAAD,CAAR;AAKD;AACF,CAnBM","sourcesContent":["import axios from '../axios-config';\r\nimport { subredditsSelector } from '../selectors';\r\n\r\nexport const setSubreddits = (subreddits) => ({\r\n  type: 'SET_SUBREDDITS',\r\n  subreddits,\r\n});\r\n\r\nexport const getSubreddits = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: 'GET_SUBREDDITS_REQUEST' });\r\n    const response = await axios.get('/subreddits');\r\n    dispatch(setSubreddits(response.data));\r\n    dispatch({ type: 'GET_SUBREDDITS_SUCCESS' });\r\n  } catch (e) {\r\n    dispatch({\r\n      type: 'GET_SUBREDDITS_FAILURE',\r\n      message: e.message,\r\n      response: e.response,\r\n    });\r\n  }\r\n};\r\n\r\nexport const createSubreddit = (name, description) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({ type: 'CREATE_SUBREDDIT_REQUEST' });\r\n    const response = await axios.post('/subreddits', { name, description });\r\n    dispatch(\r\n      setSubreddits(subredditsSelector(getState()).concat(response.data))\r\n    );\r\n    dispatch({ type: 'CREATE_SUBREDDIT_SUCCESS' });\r\n    return response.data;\r\n  } catch (e) {\r\n    dispatch({\r\n      type: 'CREATE_SUBREDDIT_FAILURE',\r\n      message: e.message,\r\n      response: e.response,\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}